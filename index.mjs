// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.2.2-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-arraybuffer@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-object@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-property@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-fast-min@v0.3.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-join@v0.1.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-filled@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-index-of@v0.2.2-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/array-buffer@v0.2.2-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/array-dataview@v0.2.2-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.2.2-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-accessor@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-write-accessor@v0.2.2-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-little-endian@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-little-endian@v0.2.2-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/boolean-ctor@v0.2.2-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-cmplx@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/array-typed@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-is-real-floating-point-data-type@esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-is-signed-integer-data-type@esm/index.mjs";import{isPrimitive as E}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import{isPrimitive as T}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import{isPrimitive as V}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@esm/index.mjs";import{isPrimitive as S}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-bigint@esm/index.mjs";import L from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-complex-like@esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-allowed-data-type-cast@esm/index.mjs";import U from"https://cdn.jsdelivr.net/gh/stdlib-js/array-min-dtype@esm/index.mjs";import I from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-min-signed-integer-dtype@esm/index.mjs";import J from"https://cdn.jsdelivr.net/gh/stdlib-js/complex-dtype@esm/index.mjs";import N from"https://cdn.jsdelivr.net/gh/stdlib-js/number-ctor@esm/index.mjs";import M from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-complex-like@v0.2.2-esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/boolean-ctor@esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/bigint-ctor@esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.2.3-esm/index.mjs";import B from"https://cdn.jsdelivr.net/gh/stdlib-js/array-uint8@esm/index.mjs";import P from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@esm/index.mjs";import R from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-dataview@v0.2.2-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-is-complex-floating-point-data-type@esm/index.mjs";import $ from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-is-boolean-data-type@esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-is-real-data-type@esm/index.mjs";import q from"https://cdn.jsdelivr.net/gh/stdlib-js/array-dtype@esm/index.mjs";import C from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-reinterpret-complex@esm/index.mjs";import G from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-reinterpret-boolean@esm/index.mjs";import H from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-gfill@esm/index.mjs";import K from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-map@esm/index.mjs";import Q from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.2.2-esm/index.mjs";import{isPrimitive as W}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import{isPrimitive as X}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import Y,{factory as Z}from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.2.2-esm/index.mjs";import ee from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-bytes-per-element@esm/index.mjs";import te from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import ne from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import se from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.2-esm/index.mjs";import re from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.3.0-esm/index.mjs";var ie="__@@##$$@@__struct_buffer__@@$$##@@__",ae={int8:{get:"getInt8",set:"setInt8"},int16:{get:"getInt16",set:"setInt16"},int32:{get:"getInt32",set:"setInt32"},int64:{get:"getBigInt64",set:"setBigInt64"},uint8:{get:"getUint8",set:"setUint8"},uint16:{get:"getUint16",set:"setUint16"},uint32:{get:"getUint32",set:"setUint32"},uint64:{get:"getBigUint64",set:"setBigUint64"},float16:{get:"getFloat16",set:"setFloat16"},float32:{get:"getFloat32",set:"setFloat32"},float64:{get:"getFloat64",set:"setFloat64"},complex32:{get:"getFloat16",set:"setFloat16"},complex64:{get:"getFloat32",set:"setFloat32"},complex128:{get:"getFloat64",set:"setFloat64"},bool:{get:"getUint8",set:"setUint8"}};var oe={complex128:"float64",complex64:"float32",complex32:"float16"};function le(e){if(e.length)return e.isStructType?function(e){return function(){var t,n,s,r;for(t=(n=this[ie]).byteOffset+e.byteOffset,s=[],r=0;r<e.length;r++)s.push(new e.type.constructor(n.buffer,t,e.byteLength)),t+=e.byteOffset;return s}}(e):function(e){return function(){var t=this[ie];return w(t.buffer,t.byteOffset+e.byteOffset,e.length,e.type)}}(e);switch(e.type){case"float64":case"float32":case"float16":case"int8":case"int16":case"int32":case"uint8":case"uint16":case"uint32":case"int64":case"uint64":return function(e,t){return function(){return this[ie][t](e.byteOffset,y)}}(e,ae[e.type].get);case"bool":return function(e,t){return function(){var n=this[ie];return v(n[t](e.byteOffset,b))}}(e,ae[e.type].get);case"complex128":case"complex64":case"complex32":return function(e,t){return function(){var n=this[ie],s=n[t](e.byteOffset,y),r=n[t](e.byteOffset+e.byteLength/2,y);return j(s,r,oe[e.type])}}(e,ae[e.type].get);default:if(e.isStructType)return function(e){return function(){var t=this[ie];return new e.type.constructor(t.buffer,t.byteOffset+e.byteOffset,e.byteLength)}}(e);throw new Error(p("unexpected error. Unrecognized data type. Value: `%s`.",e.type))}}function fe(e){return e?1:0}function de(e){return N(e)}var me={dtypes:{real:"float64",complex:"complex128"}};function ue(e){return v(e)}function pe(e){return v(e.re||e.im)}function ge(e,t){return function(n){var s,r;T(n)?(s="bool",r=fe(n)):E(n)?(s=me.dtypes.real,r=fe(ue(n))):S(n)?(s="int64",r=fe(function(e){return v(e)}(n))):M(n)?(s=J(n)||me.dtypes.complex,r=fe(pe(n))):(s="generic",r=_(n));if(!F(s,e.type,e.castingMode))throw new TypeError(p("invalid assignment. Assigned value cannot be cast to the data type of `%s`. Data types: [%s, %s].",e.name,e.type,s));this[ie][t](e.byteOffset,r,y)}}function ce(e,t){return function(n){var s,r;S(n)?(s="int64",r=n):E(n)?V(n)?(s=U(n),r=k(n)):(s=me.dtypes.real,r=k(A(n))):T(n)?(s="bool",r=function(e){return k(e?1:0)}(n)):M(n)?(s=J(n)||me.dtypes.complex,r=k(A(n.re))):(s="generic",r=k(A(N(r))));if(!F(s,e.type,e.castingMode))throw new TypeError(p("invalid assignment. Assigned value cannot be cast to the data type of `%s`. Data types: [%s, %s].",e.name,e.type,s));this[ie][t](e.byteOffset,r,y)}}function he(e){return i(e)&&R(e[ie])}function ye(e){return e.re}function be(e){if(e.length)return e.isStructType?function(e){return function(t){var n,r,i,a,o,l,f,d;if(!s(t))throw new TypeError(p("invalid assignment. `%s` must be an array-like object. Value: `%s`.",e.name,t));if(t.length!==e.length)throw new RangeError(p("invalid assignment. `%s` must be an array-like object having length %u.",e.name,e.length));if("none"===e.casting)for(d=0;d<t.length;d++)if(!(t[d]instanceof e.type))throw new TypeError(p("invalid assignment. Assigned value cannot be cast to the data type of `%s`. Value: `%s`.",e.name,t[d]));for(f=e.byteLength/e.length,r=[],d=0;d<t.length;d++){if((l=this.constructor.viewOf(t[d])).byteLength!==f)throw new RangeError(p("invalid assignment. `%s` must be an array-like object containing `struct` instances having the same byte length.",e.name));o=new B(l.buffer,l.byteOffset,f),r.push(o)}for(n=(i=this[ie]).byteOffset+e.byteOffset,d=0;d<t.length;d++)a=new B(i.buffer,n,f),P(e.length,r[d],1,a,1),n+=f}}(e):function(e){return function(t){var n,r,i;if(!s(t)||he(t))throw new TypeError(p("invalid assignment. `%s` must be an array-like object. Value: `%s`.",e.name,t));if(t.length!==e.length)throw new RangeError(p("invalid assignment. `%s` must be an array-like object having length %u.",e.name,e.length));if(i=q(t),!F(i,e.type,e.castingMode))throw new TypeError(p("invalid assignment. Assigned value cannot be cast to the data type of `%s`. Data types: [%s, %s].",e.name,e.type,i));return r=this[ie],n=w(r.buffer,r.byteOffset+e.byteOffset,e.length,e.type),i===e.type?D(i)?void P(2*e.length,C(t,0),1,C(n,0),1):$(i)?void P(e.length,G(t,0),1,G(n,0),1):void P(e.length,t,1,n,1):z(i)?z(e.type)?void P(e.length,t,1,n,1):D(e.type)?(n=C(n,0),P(e.length,n,2,t,1),void H.ndarray(e.length,0,n,2,1)):void K.assign(t,n,1,0,ue):D(i)?z(e.type)?void K.assign(t,n,1,0,ye):D(e.type)?void P(2*e.length,C(t,0),1,C(n,0),1):void K.assign(t,n,1,0,pe):void(z(e.type)?P(e.length,G(t,0),1,n,1):(n=C(n,0),P(e.length,n,2,G(t,0),1),H.ndarray(e.length,0,n,2,1)))}}(e);switch(e.type){case"float64":case"float32":case"float16":case"int8":case"int16":case"int32":case"uint8":case"uint16":case"uint32":return function(e,t){return function(n){var s,r;if(E(n)?(s=x(e.type)?e.type:V(n)?O(e.type)?I(n):U(n):me.dtypes.real,r=n):L(n)?(s=J(n)||("float32"===e.type?"complex64":"complex128"),r=n.re):T(n)?(s="bool",r=fe(n)):S(n)?(s="int64",r=de(n)):(s="generic",r=n),!F(s,e.type,e.castingMode))throw new TypeError(p("invalid assignment. Assigned value cannot be cast to the data type of `%s`. Data types: [%s, %s].",e.name,e.type,s));this[ie][t](e.byteOffset,r,y)}}(e,ae[e.type].set);case"int64":case"uint64":return ce(e,ae[e.type].set);case"bool":return ge(e,ae[e.type].set);case"complex128":case"complex64":case"complex32":return function(e,t){return function(n){var s,r,i,a;if(L(n)?(r=J(n)||e.type,i=n.re,a=n.im):E(n)?(r="complex64"===e.type?"float32":"float64",i=n,a=0):S(n)?(r="int64",i=de(n),a=0):T(n)?(r="bool",i=fe(n),a=0):(r="generic",i=n,a=0),!F(r,e.type,e.castingMode))throw new TypeError(p("invalid assignment. Assigned value cannot be cast to the data type of `%s`. Data types: [%s, %s].",e.name,e.type,r));(s=this[ie])[t](e.byteOffset,i,y),s[t](e.byteOffset+e.byteLength/2,a,y)}}(e,ae[e.type].set);default:if(e.isStructType)return function(e){return function(t){var n,s,r,i,a;if(!he(t))throw new TypeError(p("invalid assignment. `%s` must be a `struct` instance. Value: `%s`.",e.name,t));if("none"===e.casting&&!(t instanceof e.type))throw new TypeError(p("invalid assignment. Assigned value cannot be cast to the data type of `%s`. Value: `%s`.",e.name,t));if(a=e.byteLength,(i=this.constructor.viewOf(t)).byteLength!==a)throw new RangeError(p("invalid assignment. `%s` must be a `struct` instance having the same byte length.",e.name));r=new B(i.buffer,i.byteOffset,a),n=this[ie],s=new B(n.buffer,n.byteOffset+e.byteOffset,a),P(e.length,r,1,s,1)}}(e);throw new Error(p("unexpected error. Unrecognized data type. Value: `%s`.",e.type))}}var ve=["name","type","description","length","enumerable","writable","default","castingMode"];function je(e){return"union"===e.type&&s(e.fields)}function we(e,t){return T(e)?null:new TypeError(p("invalid argument. `%s` field must be a boolean. Value: `%s`.",t,e))}var xe=["int8","int16","int32","int64","uint8","uint16","uint32","uint64","float32","float64","complex64","complex128","bool"];var Oe,Ee={int8:1,int16:2,int32:4,int64:8,uint8:1,uint16:2,uint32:4,uint64:8,float16:2,float32:4,float64:8,complex32:2,complex64:4,complex128:8,bool:1},Te=["name","type"],Ve={name:function(e,t){return W(e)||e.length>0?null:new TypeError(p("invalid argument. `%s` field must be a non-empty string. Value: `%s`.",t,e))},type:function(e){return Y(xe,e)||he(e)?null:new TypeError(p('invalid argument. `%s` field must be either a `struct` or one of the following: "%s". Value: `%s`.',"type",l(xe,", "),e))},description:function(e,t){return W(e)?null:new TypeError(p("invalid argument. `%s` field must be a string. Value: `%s`.",t,e))},length:function(e,t){return X(e)?null:new TypeError(p("invalid argument. `%s` field must be a positive integer. Value: `%s`.",t,e))},enumerable:we,writable:we,default:Q(null),castingMode:(Oe=["none","safe","mostly-safe","same-kind","unsafe"],function(e,t){return Y(Oe,e)?null:new TypeError(p('invalid argument. `%s` field must be one of the following: "%s". Value: `%s`.',t,l(Oe,", "),e))})};function Se(e,t){var n,s,r,i,o;for(n={isStructType:!1,description:"",byteLength:0,byteOffset:0,alignment:0,padding:0,enumerable:!0,writable:!0,default:void 0,castingMode:"none"},o=0;o<t.length;o++)if(i=t[o],a(e,i)){if(r=e[i],s=Ve[i](r,i))return s;n[i]=r}return function(e,t){var n;for(n=0;n<t.length;n++)if(!a(e,t[n]))return!1;return!0}(n,Te)?(n.isStructType=he(n.type),n.byteLength=function(e){var t;return t=e.isStructType?e.type.constructor.byteLength:ee(e.type),e.length&&(t*=e.length),t}(n),n.isStructType?n.alignment=n.type.constructor.alignment:n.alignment=Ee[n.type],n):new TypeError(p('invalid argument. Field objects must have the following properties: "%s". Value: `%s`.',l(Te,", "),JSON.stringify(e)))}function Le(e){var t,n,s;for(t=0,s=0;s<e.length;s++)(n=e[s].alignment)>t&&(t=n);return t}function Fe(e){var t,n,s,r,o,l,f;if(0===(t=e.fields).length)return null;for(s=[],f=0;f<t.length;f++){if(l=t[f],!i(l))return null;if(je(l))return new TypeError(p("invalid argument. Union types cannot contain nested union types. Value: `%s`.",JSON.stringify(t)));if(void 0===n&&a(l,"default"))n=!0;else if(!0===n&&a(l,"default"))return new TypeError(p("invalid argument. Union types can only contain one field with a default value. Value: `%s`.",JSON.stringify(t)));if((r=Se(l,ve))instanceof Error)return r;if(0===f)o=r.byteLength;else if(r.byteLength!==o)return new RangeError(p("invalid argument. Union types must contain fields having the same byte length. Value: `%s`.",JSON.stringify(t)));s.push(r)}return{type:"union",fields:s,byteLength:o,byteOffset:0,alignment:Le(s),padding:0}}function Ue(e,t){var n;for(n=0;n<e.length;n++)e[n].padding=t;return e}var Ie=["none","linear"],Je=Z(Ie);function Ne(e,t,n){var s;if(!te(n))throw new TypeError(p("null2V",n));if(s={format:"none"},ne(n,"format")&&(s.format=n.format,!Je(s.format)))throw new TypeError(p("null4S","format",l(Ie,", "),n.format));return"linear"===s.format?function(e,t){var n,s,r,i,a,o,l,f,d,m,u,g,c,h,y,b,v,j,w,x,O;for(b=t.length,n="%"+(e.constructor.byteLength-1).toString().length+"s",h=0,w=0;w<b;w++)(y=(v=t[w]).name.length+1+(v.byteLength-1).toString().length+1)>h&&(h=y);for(s="%"+h+"s",r="// %s",o="%s: %s   %s",m=0,f=[],w=0;w<b;w++)if(v=t[w],!(w>0&&v.byteOffset===t[w-1].byteOffset)){for(d=w<b-1&&v.byteOffset===t[w+1].byteOffset,x=0;x<v.byteLength;x++){if(u=p(n,m.toString()),g=p(s,p("%s[%u]",v.name,x)),i=v.alignment>1?" (byte %u)":"",d){for(a=" => union: %s",l=[],O=w+1;O<b&&v.byteOffset===t[O].byteOffset;)j=t[O],l.push(p("%s<%s>[%u]",j.name,j.type,x%j.alignment)),O+=1;a=p(a,l.join(", "))}else a="";l=p(i+a,x%v.alignment),c=v.length?p(r,p("%s[%u]%s",v.type,A(x/v.alignment),l)):p(r,p("%s%s",v.type,l)),f.push(p(o,u,g,c)),m+=1}for(x=0;x<v.padding;x++)u=p(n,m.toString()),g=p(s,"--"),c=p(r,"padding"),f.push(p(o,u,g,c)),m+=1}return f.join("\n")}(e,t):"<Struct>"}function Me(y){var b,v,j,w,x,O,E,T;if(!s(y))throw new TypeError(p("null2O",y));if(E=function(e){var t,n,s,r;for(t=[],r=0;r<e.length;r++){if(s=e[r],!i(s))return new TypeError(p("invalid argument. First argument must be an array of objects. Value: `%s`. Index: `%d`.",s,r));if(je(s)){if(null===(n=Fe(s)))return new TypeError(p("invalid argument. Union types must be an array of objects. Value: `%s`. Index: `%d`.",JSON.stringify(s),r));if(n instanceof Error)return n}else if((n=Se(s,ve))instanceof Error)return n;t.push(n)}return t}(y),E instanceof Error)throw E;if(E=function(e){var t,n,s,r,i,a;for(t={},n=[],r=0;r<e.length;r++)if(a=(s=e[r]).name,je(s))for(i=0;i<s.fields.length;i++){if(!0===t[a=s.fields[i].name])return new TypeError(p("invalid argument. First argument must be an array of objects having unique field names. Value: `%s`.",JSON.stringify(e)));t[a]=!0,n.push(a)}else{if(!0===t[a])return new TypeError(p("invalid argument. First argument must be an array of objects having unique field names. Value: `%s`.",JSON.stringify(e)));t[a]=!0,n.push(a)}return n}(O=E),E instanceof Error)throw E;function V(t,s,l){var d,g,c,h,y,w,E,T,S,L;if(g=arguments.length,!(this instanceof V))return 0===g?new V:1===g?new V(t):2===g?new V(t,s):new V(t,s,l);if(r(t)){if(1===g)h=new u(t,0,v);else{if(!n(s))throw new TypeError(p("null2C",s));if(2===g)h=new u(t,s,v);else{if(!n(l))throw new TypeError(p("invalid argument. Byte length must be a nonnegative integer. Value: `%s`.",l));h=new u(t,s,o(l,v))}}if(h.byteLength<v)throw new RangeError(p("invalid argument. ArrayBuffer has insufficient capacity. Minimum capacity: `%u`.",v))}else if(h=new u(new m(v)),g>0){if(!i(t))throw new TypeError(p("null3L",t));y=t}if(e(this,ie,h),void 0!==y){for(d=f(void 0,O.length),c={},T=0;T<O.length;T++)if(L=b[T],S=j[T],a(y,L)){if(c[S])throw new Error("invalid argument. Union types may only be initialized by a single member.");d[T]=y[L],c[S]=!0}for(T=0;T<O.length;T++)c[S=j[T]]||void 0!==(w=O[T]).default&&(d[T]=w.default);for(T=0;T<O.length;T++)void 0!==(E=d[T])&&x[b[T]][1].call(this,E)}return this}return b=E,w=Le(O),O=function(e,t){var n,s,r,i,a,l,f;for(r=0,l=0;l<e.length;l++){if(a=e[l],r+=s=((n=o(a.alignment,t))-r%n)%n,l>0&&((i=e[l-1]).padding=s,je(a)&&Ue(i.fields,s)),a.byteOffset=r,je(a))for(f=0;f<a.fields.length;f++)a.fields[f].byteOffset=r;r+=a.byteLength}return s=(n-r%n)%n,a.padding=s,je(a)&&Ue(a.fields,s),e}(O,w),O=function(e){var t,n,s,r;for(t=[],s=0;s<e.length;s++)if(je(n=e[s]))for(r=0;r<n.fields.length;r++)t.push(n.fields[r]);else t.push(n);return t}(O),j=function(e){var t,n,s,r;for(n=e.length,t=[],r=0,s=0;s<n-1;s++)e[s].byteOffset!==e[s+1].byteOffset?(t.push(r),r+=1):t.push(r);return t.push(r),t}(O),T=O[O.length-1],v=T.byteOffset+T.byteLength+T.padding,e(V,"name","Struct"),e(V,"alignment",w),e(V,"byteLength",v),t(V,"fields",(function(){return b.slice()})),e(V,"byteLengthOf",(function(e){var t;if(0===b.length)throw new Error("invalid operation. struct does not have any fields.");if((t=d(b,e,0))<0)throw new TypeError(p('invalid argument. First argument must be one of the following: "%s". Value: `%s`.',l(b,", "),e));return O[t].byteLength})),e(V,"byteOffsetOf",(function(e){var t;if(0===b.length)throw new Error("invalid operation. struct does not have any fields.");if((t=d(b,e,0))<0)throw new TypeError(p('invalid argument. First argument must be one of the following: "%s". Value: `%s`.',l(b,", "),e));return O[t].byteOffset})),e(V,"descriptionOf",(function(e){var t;if(0===b.length)throw new Error("invalid operation. struct does not have any fields.");if((t=d(b,e,0))<0)throw new TypeError(p('invalid argument. First argument must be one of the following: "%s". Value: `%s`.',l(b,", "),e));return O[t].description})),e(V,"bufferOf",(function(e){if(!he(e))throw new TypeError(p("invalid argument. First argument must be a `struct` instance. Value: `%s`.",e));return e[ie].buffer})),e(V,"viewOf",(function(e){var t;if(!he(e))throw new TypeError(p("invalid argument. First argument must be a `struct` instance. Value: `%s`.",e));return t=e[ie],new u(t.buffer,t.byteOffset,t.byteLength)})),x=function(e,n){var s,r,i,a,o;for(i={},o=0;o<n.length;o++)s=le(a=n[o]),r=be(a),a.enumerable?a.writable?h(e,a.name,s,r):c(e,a.name,s):a.writable?g(e,a.name,s,r):t(e,a.name,s),i[a.name]=[s,r];return i}(V.prototype,O),e(V.prototype,"toString",(function(){if(!(this instanceof V))throw new Error("invalid invocation. `this` is not a struct instance.");return Ne(this,O,arguments.length>0?arguments[0]:{})})),e(V.prototype,"toJSON",(function(){if(!(this instanceof V))throw new Error("invalid invocation. `this` is not a struct instance.");return function(e,t){var n,r,i,a;for(n={},a=0;a<t.length;a++)i=e[(r=t[a]).name],s(i)?i=re(i):(he(i)||M(i)&&se(i.toJSON))&&(i=i.toJSON()),n[r.name]=i;return n}(this,O)})),V}export{Me as default};
//# sourceMappingURL=index.mjs.map
